digraph G {
  "(0, 1, 103)" [label="g"];
  "(0, 28, None)" -> "(0, 24, None)";
  "(0, 28, None)" -> "(24, 28, 'RLrule')";
  "(0, 45, None)" -> "(0, 44, None)";
  "(0, 45, None)" -> "(44, 45, 103)";
  "(0, 30, None)" -> "(0, 28, None)";
  "(0, 30, None)" -> "(28, 30, 7)" [label="SLP(7, 9)"];
  "(0, 32, None)" -> "(0, 30, None)";
  "(0, 32, None)" -> "(30, 32, 14)" [label="SLP(14, 16)"];
  "(0, 34, None)" -> "(0, 32, None)";
  "(0, 34, None)" -> "(32, 34, 22)" [label="SLP(22, 24)"];
  "(0, 36, None)" -> "(0, 34, None)";
  "(0, 36, None)" -> "(0, 28, 9)";
  "(0, 28, 9)" -> "0"[label="Collage"];
  "0" [label="at"];
  "(0, 38, None)" -> "(0, 36, None)";
  "(0, 38, None)" -> "(36, 38, 14)" [label="SLP(14, 16)"];
  "(0, 42, None)" -> "(0, 38, None)";
  "(0, 42, None)" -> "(38, 42, 12)" [label="SLP(12, 16)"];
  "(0, 44, None)" -> "(0, 42, None)";
  "(0, 44, None)" -> "(42, 44, 14)" [label="SLP(14, 16)"];
  "(0, 3, None)" -> "(0, 1, 103)";
  "(0, 3, None)" -> "(1, 3, None)";
  "(0, 4, None)" -> "(0, 3, None)";
  "(0, 4, None)" -> "(3, 4, 99)";
  "(0, 7, None)" -> "(0, 4, None)";
  "(0, 7, None)" -> "(4, 7, 'RLrule')";
  "(0, 10, None)" -> "(0, 7, None)";
  "(0, 10, None)" -> "(7, 10, None)";
  "(0, 12, None)" -> "(0, 10, None)";
  "(0, 12, None)" -> "(10, 12, 1)" [label="SLP(1, 3)"];
  "(0, 16, None)" -> "(0, 12, None)";
  "(0, 16, None)" -> "(12, 16, None)";
  "(0, 19, None)" -> "(0, 16, None)";
  "(0, 19, None)" -> "(16, 19, 13)" [label="SLP(13, 16)"];
  "(0, 22, None)" -> "(0, 19, None)";
  "(0, 22, None)" -> "(19, 22, 7)" [label="SLP(7, 10)"];
  "(0, 24, None)" -> "(0, 22, None)";
  "(0, 24, None)" -> "(22, 24, None)";
  "(1, 2, 116)" [label="t"];
  "(1, 3, None)" -> "(1, 2, 116)";
  "(1, 3, None)" -> "(2, 3, 103)";
  "(2, 3, 103)" [label="g"];
  "(3, 4, 99)" [label="c"];
  "(4, 5, 97)" [label="a"];
  "(4, 7, 'RLrule')" -> "(4, 5, 97)";
  "(4, 7, 'RLrule')" -> "(5, 7, 4)" [label="RestRL"];
  "(5, 7, 4)" [label="aa"];
  "(7, 8, 103)" [label="g"];
  "(7, 9, None)" -> "(7, 8, 103)";
  "(7, 9, None)" -> "(8, 9, 97)";
  "(7, 10, None)" -> "(7, 9, None)";
  "(7, 10, None)" -> "(9, 10, 97)";
  "(8, 9, 97)" [label="a"];
  "(9, 10, 97)" [label="a"];
  "(10, 12, 1)" [label="tg"];
  "(12, 13, 103)" [label="g"];
  "(12, 16, None)" -> "(12, 13, 103)";
  "(12, 16, None)" -> "(13, 16, None)";
  "(13, 14, 103)" [label="g"];
  "(13, 16, None)" -> "(13, 14, 103)";
  "(13, 16, None)" -> "(14, 16, None)";
  "(14, 15, 116)" [label="t"];
  "(14, 16, None)" -> "(14, 15, 116)";
  "(14, 16, None)" -> "(15, 16, 99)";
  "(15, 16, 99)" [label="c"];
  "(16, 19, 13)" [label="gtc"];
  "(19, 22, 7)" [label="gaa"];
  "(22, 23, 99)" [label="c"];
  "(22, 24, None)" -> "(22, 23, 99)";
  "(22, 24, None)" -> "(23, 24, 99)";
  "(23, 24, 99)" [label="c"];
  "(24, 25, 116)" [label="t"];
  "(24, 28, 'RLrule')" -> "(24, 25, 116)";
  "(24, 28, 'RLrule')" -> "(25, 28, 24)" [label="RestRL"];
  "(25, 28, 24)" [label="ttt"];
  "(28, 30, 7)" [label="ga"];
  "(30, 32, 14)" [label="tc"];
  "(32, 34, 22)" [label="cc"];
  "(36, 38, 14)" [label="tc"];
  "(38, 42, 12)" [label="ggtc"];
  "(42, 44, 14)" [label="tc"];
  "(44, 45, 103)" [label="g"];
  {rank=same; "(0, 1, 103)" "(1, 2, 116)" "(2, 3, 103)" "(3, 4, 99)" "(4, 5, 97)" "(5, 7, 4)" "(7, 8, 103)" "(8, 9, 97)" "(9, 10, 97)" "(10, 12, 1)" "(12, 13, 103)" "(13, 14, 103)" "(14, 15, 116)" "(15, 16, 99)" "(16, 19, 13)" "(19, 22, 7)" "(22, 23, 99)" "(23, 24, 99)" "(24, 25, 116)" "(25, 28, 24)" "(28, 30, 7)" "(30, 32, 14)" "(32, 34, 22)" "0" "(36, 38, 14)" "(38, 42, 12)" "(42, 44, 14)" "(44, 45, 103)" }
  ordering=out;
}
