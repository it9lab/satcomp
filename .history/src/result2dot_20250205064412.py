import json
import argparse

def read_results(file_path):
    with open(file_path, 'r') as file:
        return json.load(file)

def write_dot_file(tree, output_path):
    with open(output_path, 'w') as file:
        file.write("digraph G {\n")
        write_node(file, tree)
        file.write("}\n")

def write_node(file, node, parent=None):
    node_id = id(node)
    label = node.get('label', 'unknown')
    file.write(f'    {node_id} [label="{label}"];\n')
    if parent:
        file.write(f'    {parent} -> {node_id};\n')
    for child in node.get('children', []):
        write_node(file, child, node_id)

def main(input_path, output_path):
    tree = read_results(input_path)
    write_dot_file(tree, output_path)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Generate DOT file from cs_solver results.')
    parser.add_argument('input', help='Path to the input JSON file generated by cs_solver.py')
    parser.add_argument('output', help='Path to the output DOT file')
    args = parser.parse_args()
    main(args.input, args.output)